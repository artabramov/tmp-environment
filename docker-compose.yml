version: '3.2'
services:

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.6.2
    container_name: filebeat
    restart: unless-stopped
    user: root
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - nginx_log:/var/log/nginx:ro
      - apache_log:/var/log/apache:ro
      - rabbit_log:/var/log/rabbitmq:ro
      - celery_log:/var/log/celery:ro
      #- postgres_log:/var/log/postgresql:ro
      - mysql_log:/var/log/mysql:ro
      - app_log:/var/log/app:ro
    depends_on:
      - nginx
      - app
      #- postgres
      - mysql
      - rabbit
      - elasticsearch
    command: ["filebeat", "-e", "-strict.perms=false"]
    

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    deploy:
      resources:
        limits:
          cpus: '0.001'
          memory: 2G

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    container_name: kibana
    restart: unless-stopped
    ports:
      - 5601:5601
    links:
      - elasticsearch

  nginx:
    image: app/nginx
    container_name: nginx
    restart: always
    environment:
    - NGINX_HOST=localhost
    - NGINX_PORT=80
    ports:
    - "80:80"
    volumes:
    - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    - nginx_log:/var/log/nginx

  app:
    image: app
    container_name: app
    restart: always
    volumes:
    - apache_log:/var/log/apache2
    - celery_log:/var/log/celery
    - app_log:/var/log/app
    ports:
    - "8081:80"
    depends_on:
      #- postgres
      - mysql

  rabbit:
    image: rabbitmq:3-management
    container_name: rabbit
    restart: always
    environment:
      RABBITMQ_ERLANG_COOKIE: SWQOKODSQALRPCLNMEQG
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
      RABBITMQ_LOG_BASE: /var/log/rabbitmq/
      RABBITMQ_LOGS: rabbit.log
    volumes:
      - rabbit_data:/var/lib/rabbitmq
      - rabbit_log:/var/log/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"

  #postgres:
  #  image: postgres:13.3
  #  container_name: postgres
  #  restart: always
  #  environment:
  #    POSTGRES_DB: "postgres"
  #    POSTGRES_USER: "postgres"
  #    POSTGRES_PASSWORD: "postgres"
  #  volumes:
  #    - postgres_data:/var/lib/postgresql/data
  #    - postgres_log:/var/log/postgresql
  #  ports:
  #    - "5432:5432"
  #  command: ["postgres", "-c", "logging_collector=on", "-c", "log_directory=/var/log/postgresql/", "-c", "log_statement=all"]

  #pgadmin:
  #  image: dpage/pgadmin4
  #  container_name: pgadmin
  #  restart: always
  #  depends_on:
  #    - postgres
  #  environment:
  #    PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
  #    PGADMIN_DEFAULT_PASSWORD: admin
  #  volumes:
  #    - pgadmin_data:/var/lib/pgadmin
  #  ports:
  #    - "5555:80"

  redis:
    image: bitnami/redis
    container_name: redis
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"

  mysql:
    image: mysql
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: "app"
      MYSQL_USER: "admin"
      MYSQL_PASSWORD: "admin"
    volumes:
      - mysql_data:/var/lib/mysql
      - mysql_log:/var/log/mysql
    ports:
      - "3306:3306"

volumes:
  #postgres_data:
  mysql_data:
  rabbit_data:
  #pgadmin_data:
  elasticsearch_data:
  nginx_log:
  apache_log:
  celery_log:
  rabbit_log:
  #postgres_log:
  mysql_log:
  app_log:
